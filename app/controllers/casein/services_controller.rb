# Scaffolding generated by Casein v5.0.0.0

module Casein
  class ServicesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Services'
  		@services = Service.order(sort_order(:Name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View service'
      @service = Service.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new service'
    	@service = Service.new
    end

    def create
      @service = Service.new service_params
    
      if @service.save
        flash[:notice] = 'Service created'
        redirect_to casein_services_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new service'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update service'
      
      @service = Service.find params[:id]
    
      if @service.update_attributes service_params
        flash[:notice] = 'Service has been updated'
        redirect_to casein_services_path
      else
        flash.now[:warning] = 'There were problems when trying to update this service'
        render :action => :show
      end
    end
 
    def destroy
      @service = Service.find params[:id]

      @service.destroy
      flash[:notice] = 'Service has been deleted'
      redirect_to casein_services_path
    end
  
    private
      
      def service_params
        params.require(:service).permit(:Name, :Description, :Show_Service)
      end

  end
end